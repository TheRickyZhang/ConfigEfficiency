
" IdeaVim configuration
"----------------------------

let mapleader = " "

" Share a clipboard
set clipboard=unnamedplus

" Delete without overwriting the default register
nmap <leader>d "_d
vmap <leader>d "_d

" Smart paste
xmap <leader>p "_dP

" Keep cursor centered
nmap <C-d> <C-d>zz
nmap <C-u> <C-u>zz
nmap n     nzzzv
nmap N     Nzzzv

" Quick project-wide search & replace of word under cursor (enter word)
nmap <leader>s :%s/\<<C-r><C-w>\>/<C-r><C-w>/gI<Left><Left><Left>

" Convenient built-in functionalities
set surround         " Use s in ysiw, cs, (visual)S for operating on surrounding characters
set incsearch
set ignorecase       " case‐insensitive by default
set smartcase        " but case‐sensitive if you type a capital letter

" Toggle highlighting
nnoremap <leader>h :set hlsearch!<CR>

" J -> use JetBrain's smarter line join
set clipboard^=ideaputset ideajoin

nnoremap ds d/[A-Z]<CR>

" map <leader> keys to arrows
nnoremap <silent> <leader>e <Up>
nnoremap <silent> <leader>n <Down>
nnoremap <silent> <leader>m <Left>
nnoremap <silent> <leader>i <Right>

" brace delimits
nnoremap <silent> <leader>y /\{<CR>V%y
nnoremap <silent> <leader>d /\{<CR>V%d
nnoremap <silent> <leader>c /\{<CR>V%c

function! s:SelectToNextCharWithMark()
  let c = nr2char(getchar())
  normal! mz
  execute "normal! /\V" . escape(c, '\/') . "\<CR>"
  normal! v`z
endfunction

" <leader>v then <char> → select from here thru next <char>
nnoremap <silent> <leader>v :call <SID>SelectToNextCharWithMark()<CR>

" Have * search for current visual selection literally
xnoremap * :<C-u>call VSetSearch()<CR>/<C-R>=@/<CR><CR>
xnoremap # :<C-u>call VSetSearch()<CR>?<C-R>=@/<CR><CR>

function! VSetSearch()
  let temp = @s
  normal! gv"sy
  let @/ = '\V' . substitute( escape(@s, '/\'), '\n', '\\n', 'g' )
  let @s = temp
endfunction
